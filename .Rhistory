install.packages("tidyr")
#Load the libraries required
library(tidyverse)
library(ggplot2)
#Load the dataset
credit <- read_csv("BankChurners.csv")
#View the few top and last rows of the data
head(credit)
tail(credit)
#Structure of the data
glimpse(credit)
#Dropping the first and last two columns of the data
credit <- credit[ , 2:21]
colnames(credit)
#Searching for null values in all variables
#Create a function to search null values in a variable
null_values <- function(variable){
sum(is.null(variable) | is.na(variable))
}
#Apply the function to all variables in the data
null_counts <- sapply(credit, null_values)
#Print the count of null values
null_counts
#Finding the duplicate rows
duplicate_rows <- credit[duplicated(credit) , ]
#Print the duplicate rows
duplicate_rows
#Statistical summaries for each variable
summary(credit)
#Converting Y variable into 0s and 1s.
#0 - Existing Customer
#1 - Attrited Customer
credit$Attrition_Flag <- ifelse(credit$Attrition_Flag == "Existing Customer",0,1)
#Factor Analysis for Mixed Data
library(FactoMineR)
library(factoextra)
famd_result <- FAMD(credit[,2:20], graph = FALSE)
#Summary of FAMD
summary(famd_result)
#Variable's contribution to Dimension 1
fviz_contrib(famd_result,"var", axes=1)
#Contribution of Variables to Dimension 2
fviz_contrib(famd_result, "var", axes=2)
#Total unique values in income category
print(unique(credit$Income_Category))
#Converting the categories in Income_Category to numbers
credit$Income_Category <- as.numeric(factor(credit$Income_Category, levels = c("Unknown","Less than $40K",
"$40K - $60K","$60K - $80K",
"$80K - $120K","$120K +"),
labels = c(0,1,2,3,4,5)))
View(credit)
#Total Unique Values in Gender Variable
print(unique(credit$Gender))
#Converting Males to 0 and Females to 1
credit$Gender <- ifelse(credit$Gender == "M",0,1)
View(credit)
#Total Unique Values in Card Category
print(unique(credit$Card_Category))
#Assigning numbers to card categories
#1 - Blue
#2 - Silver
#3- Gold
#4 - Platinum
credit$Card_Category <- as.numeric(factor(credit$Card_Category, levels = c("Blue","Silver","Gold","Platinum"),
labels = c(1,2,3,4)))
View(credit)
#Convert the target variable to factor
credit$Attrition_Flag <- as.factor(credit$Attrition_Flag)
#Set the seed and split the data into training and testing parts
set.seed(7)
credit_index <- sample(nrow(credit), 0.7*nrow(credit), replace = FALSE)
credit_train <- credit[credit_index, ]
credit_test <- credit[-credit_index, ]
#Train and test simple neural network
library(neuralnet)
NN1 <- neuralnet(Attrition_Flag ~ Avg_Open_To_Buy + Credit_Limit + Income_Category + Avg_Utilization_Ratio +
Gender + Card_Category, credit_train, hidden = 4, lifesign = "minimal",
linear.output = FALSE, threshold = 0.1)
#Plot the Simple Neural Network
plot(NN1)
#Testing the Simple Neural Network
actual <- credit_test[,1]
temp_test <- credit_test[,2:20]
NN1.results <- compute(NN1, temp_test)
neural_result <- as.factor(round(NN1.results$net.result))
predicttable = table(neural_result, actual)
View(NN1.results)
NN1.results$net.result
#Testing the Simple Neural Network
predictions <- compute(NN1, credit_test[,-1])
predictions
#Testing the Simple Neural Network
predictions <- compute(NN1, credit_test[,-1])
#Accuracy
library(caret)
predicted_label <- ifelse(predictions > 0.5, 1, 0)
#Accuracy
library(caret)
results <- data.frame(actual = credit_test$Attrition_Flag, prediction = NN1.results$net.result)
results[1:10,]
#Load the dataset
credit <- read_csv("BankChurners.csv")
#View the few top and last rows of the data
head(credit)
tail(credit)
#Structure of the data
glimpse(credit)
#Dropping the first and last two columns of the data
credit <- credit[ , 2:21]
colnames(credit)
#Searching for null values in all variables
#Create a function to search null values in a variable
null_values <- function(variable){
sum(is.null(variable) | is.na(variable))
}
#Apply the function to all variables in the data
null_counts <- sapply(credit, null_values)
#Print the count of null values
null_counts
#Finding the duplicate rows
duplicate_rows <- credit[duplicated(credit) , ]
#Print the duplicate rows
duplicate_rows
#Statistical summaries for each variable
summary(credit)
#Converting Y variable into 0s and 1s.
#0 - Existing Customer
#1 - Attrited Customer
credit$Attrition_Flag <- ifelse(credit$Attrition_Flag == "Existing Customer",0,1)
#Factor Analysis for Mixed Data
library(FactoMineR)
library(factoextra)
famd_result <- FAMD(credit[,2:20], graph = FALSE)
#Summary of FAMD
summary(famd_result)
#Variable's contribution to Dimension 1
fviz_contrib(famd_result,"var", axes=1)
#Contribution of Variables to Dimension 2
fviz_contrib(famd_result, "var", axes=2)
#Total unique values in income category
print(unique(credit$Income_Category))
#Converting the categories in Income_Category to numbers
credit$Income_Category <- as.numeric(factor(credit$Income_Category, levels = c("Unknown","Less than $40K",
"$40K - $60K","$60K - $80K",
"$80K - $120K","$120K +"),
labels = c(0,1,2,3,4,5)))
#Total Unique Values in Gender Variable
print(unique(credit$Gender))
#Converting Males to 0 and Females to 1
credit$Gender <- ifelse(credit$Gender == "M",0,1)
#Total Unique Values in Card Category
print(unique(credit$Card_Category))
#Assigning numbers to card categories
#1 - Blue
#2 - Silver
#3- Gold
#4 - Platinum
credit$Card_Category <- as.numeric(factor(credit$Card_Category, levels = c("Blue","Silver","Gold","Platinum"),
labels = c(1,2,3,4)))
#Convert the target variable to factor
credit$Attrition_Flag <- as.factor(credit$Attrition_Flag)
#Set the seed and split the data into training and testing parts
set.seed(7)
credit_index <- sample(nrow(credit), 0.7*nrow(credit), replace = FALSE)
credit_train <- credit[credit_index, ]
credit_test <- credit[-credit_index, ]
#Train simple neural network
library(neuralnet)
NN1 <- neuralnet(Attrition_Flag ~ Avg_Open_To_Buy + Credit_Limit + Income_Category + Avg_Utilization_Ratio +
Gender + Card_Category, credit_train, hidden = 4, lifesign = "minimal",
linear.output = FALSE, threshold = 0.1)
#Plot the Simple Neural Network
plot(NN1)
#Testing the Simple Neural Network
predictions <- compute(NN1, credit_test[,-1])
#Accuracy
library(caret)
results <- data.frame(actual = credit_test$Attrition_Flag, prediction = NN1.results$net.result)
#Accuracy
library(caret)
results <- data.frame(actual = credit_test$Attrition_Flag, prediction = predictions$net.result)
results[1:10,]
#Load the dataset
credit <- read_csv("BankChurners.csv")
#View the few top and last rows of the data
head(credit)
tail(credit)
#Structure of the data
glimpse(credit)
#Dropping the first and last two columns of the data
credit <- credit[ , 2:21]
colnames(credit)
#Searching for null values in all variables
#Create a function to search null values in a variable
null_values <- function(variable){
sum(is.null(variable) | is.na(variable))
}
#Apply the function to all variables in the data
null_counts <- sapply(credit, null_values)
#Print the count of null values
null_counts
#Finding the duplicate rows
duplicate_rows <- credit[duplicated(credit) , ]
#Print the duplicate rows
duplicate_rows
#Statistical summaries for each variable
summary(credit)
#Converting Y variable into 0s and 1s.
#0 - Existing Customer
#1 - Attrited Customer
credit$Attrition_Flag <- ifelse(credit$Attrition_Flag == "Existing Customer",0,1)
#Factor Analysis for Mixed Data
library(FactoMineR)
library(factoextra)
famd_result <- FAMD(credit[,2:20], graph = FALSE)
#Summary of FAMD
summary(famd_result)
#Converting the categories in Income_Category to numbers
credit$Income_Category <- as.numeric(factor(credit$Income_Category, levels = c("Unknown","Less than $40K",
"$40K - $60K","$60K - $80K",
"$80K - $120K","$120K +"),
labels = c(0,1,2,3,4,5)))
#Converting Males to 0 and Females to 1
credit$Gender <- ifelse(credit$Gender == "M",0,1)
#Assigning numbers to card categories
#1 - Blue
#2 - Silver
#3- Gold
#4 - Platinum
credit$Card_Category <- as.numeric(factor(credit$Card_Category, levels = c("Blue","Silver","Gold","Platinum"),
labels = c(1,2,3,4)))
#Set the seed and split the data into training and testing parts
set.seed(7)
credit_index <- sample(nrow(credit), 0.7*nrow(credit), replace = FALSE)
credit_train <- credit[credit_index, ]
credit_test <- credit[-credit_index, ]
#Train simple neural network
library(neuralnet)
NN1 <- neuralnet(Attrition_Flag ~ Avg_Open_To_Buy + Credit_Limit + Income_Category + Avg_Utilization_Ratio +
Gender + Card_Category, credit_train, hidden = 4, lifesign = "minimal",
linear.output = FALSE, threshold = 0.1)
#Plot the Simple Neural Network
plot(NN1)
#Testing the Simple Neural Network
predictions <- compute(NN1, credit_test[,-1])
#Accuracy
library(caret)
results <- data.frame(actual = credit_test$Attrition_Flag, prediction = predictions$net.result)
results[1:10,]
#Accuracy
library(caret)
results <- data.frame(actual = credit_test$Attrition_Flag, prediction = predictions$net.result)
results$prediction <- ifelse(results$prediction > 0.5, 1, 0)
actual <- as.factor(credit_test$Attrition_Flag)
neural_result <- as.factor(results$prediction)
confusionMatrix(neural_result, actual)
#Train simple neural network
library(neuralnet)
NN1 <- neuralnet(Attrition_Flag ~ Avg_Open_To_Buy + Credit_Limit + Income_Category + Avg_Utilization_Ratio +
Gender + Card_Category, credit_train, hidden = 10, lifesign = "minimal",
linear.output = FALSE, threshold = 0.1)
#Set the seed and split the data into training and testing parts
set.seed(7)
credit_index <- sample(nrow(credit), 0.5*nrow(credit), replace = FALSE)
credit_train <- credit[credit_index, ]
credit_test <- credit[-credit_index, ]
#Train simple neural network
library(neuralnet)
NN1 <- neuralnet(Attrition_Flag ~ Avg_Open_To_Buy + Credit_Limit + Income_Category + Avg_Utilization_Ratio +
Gender + Card_Category, credit_train, hidden = 4, lifesign = "minimal",
linear.output = FALSE, threshold = 0.1)
#Plot the Simple Neural Network
plot(NN1)
#Testing the Simple Neural Network
predictions <- compute(NN1, credit_test[,-1])
#Accuracy
library(caret)
results <- data.frame(actual = credit_test$Attrition_Flag, prediction = predictions$net.result)
results$prediction <- ifelse(results$prediction > 0.5, 1, 0)
actual <- as.factor(credit_test$Attrition_Flag)
neural_result <- as.factor(results$prediction)
confusionMatrix(neural_result, actual)
#Set the seed and split the data into training and testing parts
set.seed(7)
credit_index <- sample(nrow(credit), 0.6*nrow(credit), replace = FALSE)
credit_train <- credit[credit_index, ]
credit_test <- credit[-credit_index, ]
#Train simple neural network
library(neuralnet)
NN1 <- neuralnet(Attrition_Flag ~ Avg_Open_To_Buy + Credit_Limit + Income_Category + Avg_Utilization_Ratio +
Gender + Card_Category, credit_train, hidden = 4, lifesign = "minimal",
linear.output = FALSE, threshold = 0.1)
#Plot the Simple Neural Network
plot(NN1)
#Testing the Simple Neural Network
predictions <- compute(NN1, credit_test[,-1])
#Accuracy
library(caret)
results <- data.frame(actual = credit_test$Attrition_Flag, prediction = predictions$net.result)
results$prediction <- ifelse(results$prediction > 0.5, 1, 0)
actual <- as.factor(credit_test$Attrition_Flag)
neural_result <- as.factor(results$prediction)
confusionMatrix(neural_result, actual)
#Set the seed and split the data into training and testing parts
set.seed(7)
credit_index <- sample(nrow(credit), 0.55*nrow(credit), replace = FALSE)
credit_train <- credit[credit_index, ]
credit_test <- credit[-credit_index, ]
#Train simple neural network
library(neuralnet)
NN1 <- neuralnet(Attrition_Flag ~ Avg_Open_To_Buy + Credit_Limit + Income_Category + Avg_Utilization_Ratio +
Gender + Card_Category, credit_train, hidden = 4, lifesign = "minimal",
linear.output = FALSE, threshold = 0.1)
#Plot the Simple Neural Network
plot(NN1)
#Testing the Simple Neural Network
predictions <- compute(NN1, credit_test[,-1])
#Accuracy
library(caret)
results <- data.frame(actual = credit_test$Attrition_Flag, prediction = predictions$net.result)
results$prediction <- ifelse(results$prediction > 0.5, 1, 0)
actual <- as.factor(credit_test$Attrition_Flag)
neural_result <- as.factor(results$prediction)
confusionMatrix(neural_result, actual)
#Set the seed and split the data into training and testing parts
set.seed(7)
credit_index <- sample(nrow(credit), 0.65*nrow(credit), replace = FALSE)
credit_train <- credit[credit_index, ]
credit_test <- credit[-credit_index, ]
#Train simple neural network
library(neuralnet)
NN1 <- neuralnet(Attrition_Flag ~ Avg_Open_To_Buy + Credit_Limit + Income_Category + Avg_Utilization_Ratio +
Gender + Card_Category, credit_train, hidden = 4, lifesign = "minimal",
linear.output = FALSE, threshold = 0.1)
#Plot the Simple Neural Network
plot(NN1)
#Testing the Simple Neural Network
predictions <- compute(NN1, credit_test[,-1])
#Accuracy
library(caret)
results <- data.frame(actual = credit_test$Attrition_Flag, prediction = predictions$net.result)
results$prediction <- ifelse(results$prediction > 0.5, 1, 0)
actual <- as.factor(credit_test$Attrition_Flag)
neural_result <- as.factor(results$prediction)
confusionMatrix(neural_result, actual)
#Set the seed and split the data into training and testing parts
set.seed(7)
credit_index <- sample(nrow(credit), 0.6*nrow(credit), replace = FALSE)
credit_train <- credit[credit_index, ]
credit_test <- credit[-credit_index, ]
#Train simple neural network
library(neuralnet)
NN1 <- neuralnet(Attrition_Flag ~ Avg_Open_To_Buy + Credit_Limit + Income_Category + Avg_Utilization_Ratio +
Gender + Card_Category, credit_train, hidden = 4, lifesign = "minimal",
linear.output = FALSE, threshold = 0.1)
#Plot the Simple Neural Network
plot(NN1)
#Testing the Simple Neural Network
predictions <- compute(NN1, credit_test[,-1])
#Accuracy
library(caret)
results <- data.frame(actual = credit_test$Attrition_Flag, prediction = predictions$net.result)
results$prediction <- ifelse(results$prediction > 0.5, 1, 0)
actual <- as.factor(credit_test$Attrition_Flag)
neural_result <- as.factor(results$prediction)
confusionMatrix(neural_result, actual)
#Set the seed and split the data into training and testing parts
set.seed(8)
credit_index <- sample(nrow(credit), 0.6*nrow(credit), replace = FALSE)
credit_train <- credit[credit_index, ]
credit_test <- credit[-credit_index, ]
#Train simple neural network
library(neuralnet)
NN1 <- neuralnet(Attrition_Flag ~ Avg_Open_To_Buy + Credit_Limit + Income_Category + Avg_Utilization_Ratio +
Gender + Card_Category, credit_train, hidden = 4, lifesign = "minimal",
linear.output = FALSE, threshold = 0.1)
#Plot the Simple Neural Network
plot(NN1)
#Testing the Simple Neural Network
predictions <- compute(NN1, credit_test[,-1])
#Accuracy
library(caret)
results <- data.frame(actual = credit_test$Attrition_Flag, prediction = predictions$net.result)
results$prediction <- ifelse(results$prediction > 0.5, 1, 0)
actual <- as.factor(credit_test$Attrition_Flag)
neural_result <- as.factor(results$prediction)
confusionMatrix(neural_result, actual)
#Set the seed and split the data into training and testing parts
set.seed(6)
credit_index <- sample(nrow(credit), 0.6*nrow(credit), replace = FALSE)
credit_train <- credit[credit_index, ]
credit_test <- credit[-credit_index, ]
#Train simple neural network
library(neuralnet)
NN1 <- neuralnet(Attrition_Flag ~ Avg_Open_To_Buy + Credit_Limit + Income_Category + Avg_Utilization_Ratio +
Gender + Card_Category, credit_train, hidden = 4, lifesign = "minimal",
linear.output = FALSE, threshold = 0.1)
#Train simple neural network
library(neuralnet)
NN1 <- neuralnet(Attrition_Flag ~ Avg_Open_To_Buy + Credit_Limit + Income_Category + Avg_Utilization_Ratio +
Gender + Card_Category, credit_train, hidden = 1, lifesign = "minimal",
linear.output = FALSE, threshold = 0.1)
#Plot the Simple Neural Network
plot(NN1)
#Testing the Simple Neural Network
predictions <- compute(NN1, credit_test[,-1])
#Accuracy
library(caret)
results <- data.frame(actual = credit_test$Attrition_Flag, prediction = predictions$net.result)
results$prediction <- ifelse(results$prediction > 0.5, 1, 0)
actual <- as.factor(credit_test$Attrition_Flag)
neural_result <- as.factor(results$prediction)
confusionMatrix(neural_result, actual)
#Set the seed and split the data into training and testing parts
set.seed(7)
credit_index <- sample(nrow(credit), 0.6*nrow(credit), replace = FALSE)
credit_train <- credit[credit_index, ]
credit_test <- credit[-credit_index, ]
#Train simple neural network
library(neuralnet)
NN1 <- neuralnet(Attrition_Flag ~ Avg_Open_To_Buy + Credit_Limit + Income_Category + Avg_Utilization_Ratio +
Gender + Card_Category, credit_train, hidden = 4, lifesign = "minimal",
linear.output = FALSE, threshold = 0.1)
#Plot the Simple Neural Network
plot(NN1)
#Testing the Simple Neural Network
predictions <- compute(NN1, credit_test[,-1])
#Accuracy
library(caret)
results <- data.frame(actual = credit_test$Attrition_Flag, prediction = predictions$net.result)
results$prediction <- ifelse(results$prediction > 0.5, 1, 0)
actual <- as.factor(credit_test$Attrition_Flag)
neural_result <- as.factor(results$prediction)
confusionMatrix(neural_result, actual)
